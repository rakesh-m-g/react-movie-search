{"ast":null,"code":"import React from\"react\";import{Modal,Button}from\"react-bootstrap\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MovieModal=function MovieModal(_ref){var show=_ref.show,handleClose=_ref.handleClose,movie=_ref.movie;return/*#__PURE__*/_jsxs(Modal,{show:show,onHide:handleClose,children:[/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"1em\"},children:[\" \",/*#__PURE__*/_jsx(Modal.Title,{children:movie.original_title})]}),/*#__PURE__*/_jsxs(Modal.Body,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsx(\"img\",{src:\"http://image.tmdb.org/t/p/w500\".concat(movie.poster_path),alt:\"\".concat(movie.original_title,\" Poster\"),className:\"img-fluid\"})}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Release Date:\"}),\" \",movie.release_date]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Overview:\"}),\" \",movie.overview]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Rating:\"}),\" \",movie.vote_average]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Genres:\"}),\" \",movie.genres&&movie.genres.length>0?movie.genres.map(function(genre){return genre.name;}).join(\", \"):\"No genres available\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Runtime:\"}),\" \",movie.runtime?\"\".concat(movie.runtime,\" minutes\"):\"N/A\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Original Language:\"}),\" \",movie.original_language?movie.original_language:\"N/A\"]})]}),/*#__PURE__*/_jsx(Modal.Footer,{children:/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"1em\"},children:[\" \",/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:handleClose,children:\"Close\"})]})})]});};export default MovieModal;","map":{"version":3,"names":["React","Modal","Button","jsx","_jsx","jsxs","_jsxs","MovieModal","_ref","show","handleClose","movie","onHide","children","style","padding","Title","original_title","Body","className","src","concat","poster_path","alt","release_date","overview","vote_average","genres","length","map","genre","name","join","runtime","original_language","Footer","variant","onClick"],"sources":["C:/Users/vsk00/Documents/betasquirrel-tasks/react-movie-search/src/MovieModal.js"],"sourcesContent":["import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst MovieModal = ({ show, handleClose, movie }) => {\n  return (\n    <Modal show={show} onHide={handleClose}>\n    \n       <div style={{padding:\"1em\"}}> <Modal.Title>{movie.original_title}</Modal.Title></div>\n      \n      <Modal.Body>\n        <div className=\"text-center\">\n          <img\n            src={`http://image.tmdb.org/t/p/w500${movie.poster_path}`}\n            alt={`${movie.original_title} Poster`}\n            className=\"img-fluid\"\n          />\n        </div>\n        <p>\n          <strong>Release Date:</strong> {movie.release_date}\n        </p>\n        <p>\n          <strong>Overview:</strong> {movie.overview}\n        </p>\n        <p>\n          <strong>Rating:</strong> {movie.vote_average}\n        </p>\n        <p>\n          <strong>Genres:</strong>{\" \"}\n          {movie.genres && movie.genres.length > 0\n            ? movie.genres.map((genre) => genre.name).join(\", \")\n            : \"No genres available\"}\n        </p>\n        <p>\n          <strong>Runtime:</strong>{\" \"}\n          {movie.runtime ? `${movie.runtime} minutes` : \"N/A\"}\n        </p>\n        <p>\n          <strong>Original Language:</strong>{\" \"}\n          {movie.original_language ? movie.original_language : \"N/A\"}\n        </p>\n      </Modal.Body>\n      <Modal.Footer>\n       <div style={{padding:\"1em\"}}> <Button  variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button></div>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default MovieModal;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,KAAK,CAAEC,MAAM,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEhD,GAAM,CAAAC,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAAC,IAAA,CAAqC,IAA/B,CAAAC,IAAI,CAAAD,IAAA,CAAJC,IAAI,CAAEC,WAAW,CAAAF,IAAA,CAAXE,WAAW,CAAEC,KAAK,CAAAH,IAAA,CAALG,KAAK,CAC5C,mBACEL,KAAA,CAACL,KAAK,EAACQ,IAAI,CAAEA,IAAK,CAACG,MAAM,CAAEF,WAAY,CAAAG,QAAA,eAEpCP,KAAA,QAAKQ,KAAK,CAAE,CAACC,OAAO,CAAC,KAAK,CAAE,CAAAF,QAAA,EAAC,GAAC,cAAAT,IAAA,CAACH,KAAK,CAACe,KAAK,EAAAH,QAAA,CAAEF,KAAK,CAACM,cAAc,CAAc,CAAC,EAAK,CAAC,cAEtFX,KAAA,CAACL,KAAK,CAACiB,IAAI,EAAAL,QAAA,eACTT,IAAA,QAAKe,SAAS,CAAC,aAAa,CAAAN,QAAA,cAC1BT,IAAA,QACEgB,GAAG,kCAAAC,MAAA,CAAmCV,KAAK,CAACW,WAAW,CAAG,CAC1DC,GAAG,IAAAF,MAAA,CAAKV,KAAK,CAACM,cAAc,WAAU,CACtCE,SAAS,CAAC,WAAW,CACtB,CAAC,CACC,CAAC,cACNb,KAAA,MAAAO,QAAA,eACET,IAAA,WAAAS,QAAA,CAAQ,eAAa,CAAQ,CAAC,IAAC,CAACF,KAAK,CAACa,YAAY,EACjD,CAAC,cACJlB,KAAA,MAAAO,QAAA,eACET,IAAA,WAAAS,QAAA,CAAQ,WAAS,CAAQ,CAAC,IAAC,CAACF,KAAK,CAACc,QAAQ,EACzC,CAAC,cACJnB,KAAA,MAAAO,QAAA,eACET,IAAA,WAAAS,QAAA,CAAQ,SAAO,CAAQ,CAAC,IAAC,CAACF,KAAK,CAACe,YAAY,EAC3C,CAAC,cACJpB,KAAA,MAAAO,QAAA,eACET,IAAA,WAAAS,QAAA,CAAQ,SAAO,CAAQ,CAAC,CAAC,GAAG,CAC3BF,KAAK,CAACgB,MAAM,EAAIhB,KAAK,CAACgB,MAAM,CAACC,MAAM,CAAG,CAAC,CACpCjB,KAAK,CAACgB,MAAM,CAACE,GAAG,CAAC,SAACC,KAAK,QAAK,CAAAA,KAAK,CAACC,IAAI,GAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAClD,qBAAqB,EACxB,CAAC,cACJ1B,KAAA,MAAAO,QAAA,eACET,IAAA,WAAAS,QAAA,CAAQ,UAAQ,CAAQ,CAAC,CAAC,GAAG,CAC5BF,KAAK,CAACsB,OAAO,IAAAZ,MAAA,CAAMV,KAAK,CAACsB,OAAO,aAAa,KAAK,EAClD,CAAC,cACJ3B,KAAA,MAAAO,QAAA,eACET,IAAA,WAAAS,QAAA,CAAQ,oBAAkB,CAAQ,CAAC,CAAC,GAAG,CACtCF,KAAK,CAACuB,iBAAiB,CAAGvB,KAAK,CAACuB,iBAAiB,CAAG,KAAK,EACzD,CAAC,EACM,CAAC,cACb9B,IAAA,CAACH,KAAK,CAACkC,MAAM,EAAAtB,QAAA,cACZP,KAAA,QAAKQ,KAAK,CAAE,CAACC,OAAO,CAAC,KAAK,CAAE,CAAAF,QAAA,EAAC,GAAC,cAAAT,IAAA,CAACF,MAAM,EAAEkC,OAAO,CAAC,WAAW,CAACC,OAAO,CAAE3B,WAAY,CAAAG,QAAA,CAAC,OAEhF,CAAQ,CAAC,EAAK,CAAC,CACH,CAAC,EACV,CAAC,CAEZ,CAAC,CAED,cAAe,CAAAN,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}